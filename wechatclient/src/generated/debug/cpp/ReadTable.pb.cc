// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ReadTable.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ReadTable.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {

namespace {

const ::google::protobuf::Descriptor* ReadImportantTableReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadImportantTableReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadImportantTableRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadImportantTableRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ReadTable_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ReadTable_2eproto() {
  protobuf_AddDesc_ReadTable_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ReadTable.proto");
  GOOGLE_CHECK(file != NULL);
  ReadImportantTableReq_descriptor_ = file->message_type(0);
  static const int ReadImportantTableReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadImportantTableReq, userid_),
  };
  ReadImportantTableReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadImportantTableReq_descriptor_,
      ReadImportantTableReq::internal_default_instance(),
      ReadImportantTableReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadImportantTableReq, _has_bits_),
      -1,
      -1,
      sizeof(ReadImportantTableReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadImportantTableReq, _internal_metadata_));
  ReadImportantTableRsp_descriptor_ = file->message_type(1);
  static const int ReadImportantTableRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadImportantTableRsp, resultcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadImportantTableRsp, friend__),
  };
  ReadImportantTableRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadImportantTableRsp_descriptor_,
      ReadImportantTableRsp::internal_default_instance(),
      ReadImportantTableRsp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadImportantTableRsp, _has_bits_),
      -1,
      -1,
      sizeof(ReadImportantTableRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadImportantTableRsp, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ReadTable_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadImportantTableReq_descriptor_, ReadImportantTableReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadImportantTableRsp_descriptor_, ReadImportantTableRsp::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ReadTable_2eproto() {
  ReadImportantTableReq_default_instance_.Shutdown();
  delete ReadImportantTableReq_reflection_;
  ReadImportantTableRsp_default_instance_.Shutdown();
  delete ReadImportantTableRsp_reflection_;
}

void protobuf_InitDefaults_ReadTable_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protocol::protobuf_InitDefaults_Friend_2eproto();
  ::protocol::protobuf_InitDefaults_Result_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ReadImportantTableReq_default_instance_.DefaultConstruct();
  ReadImportantTableRsp_default_instance_.DefaultConstruct();
  ReadImportantTableReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReadImportantTableRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_ReadTable_2eproto_once_);
void protobuf_InitDefaults_ReadTable_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_ReadTable_2eproto_once_,
                 &protobuf_InitDefaults_ReadTable_2eproto_impl);
}
void protobuf_AddDesc_ReadTable_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_ReadTable_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017ReadTable.proto\022\010protocol\032\014Friend.prot"
    "o\032\014Result.proto\"\'\n\025ReadImportantTableReq"
    "\022\016\n\006userID\030\001 \002(\t\"g\n\025ReadImportantTableRs"
    "p\022(\n\nresultCode\030\001 \002(\0162\024.protocol.ResultC"
    "ode\022$\n\006friend\030\002 \003(\0132\024.protocol.FriendIte"
    "m", 201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ReadTable.proto", &protobuf_RegisterTypes);
  ::protocol::protobuf_AddDesc_Friend_2eproto();
  ::protocol::protobuf_AddDesc_Result_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ReadTable_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ReadTable_2eproto_once_);
void protobuf_AddDesc_ReadTable_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ReadTable_2eproto_once_,
                 &protobuf_AddDesc_ReadTable_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ReadTable_2eproto {
  StaticDescriptorInitializer_ReadTable_2eproto() {
    protobuf_AddDesc_ReadTable_2eproto();
  }
} static_descriptor_initializer_ReadTable_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadImportantTableReq::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadImportantTableReq::ReadImportantTableReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReadTable_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ReadImportantTableReq)
}

void ReadImportantTableReq::InitAsDefaultInstance() {
}

ReadImportantTableReq::ReadImportantTableReq(const ReadImportantTableReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.ReadImportantTableReq)
}

void ReadImportantTableReq::SharedCtor() {
  _cached_size_ = 0;
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadImportantTableReq::~ReadImportantTableReq() {
  // @@protoc_insertion_point(destructor:protocol.ReadImportantTableReq)
  SharedDtor();
}

void ReadImportantTableReq::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadImportantTableReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadImportantTableReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadImportantTableReq_descriptor_;
}

const ReadImportantTableReq& ReadImportantTableReq::default_instance() {
  protobuf_InitDefaults_ReadTable_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadImportantTableReq> ReadImportantTableReq_default_instance_;

ReadImportantTableReq* ReadImportantTableReq::New(::google::protobuf::Arena* arena) const {
  ReadImportantTableReq* n = new ReadImportantTableReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadImportantTableReq::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ReadImportantTableReq)
  if (has_userid()) {
    userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReadImportantTableReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ReadImportantTableReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "protocol.ReadImportantTableReq.userID");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ReadImportantTableReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ReadImportantTableReq)
  return false;
#undef DO_
}

void ReadImportantTableReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ReadImportantTableReq)
  // required string userID = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.ReadImportantTableReq.userID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ReadImportantTableReq)
}

::google::protobuf::uint8* ReadImportantTableReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ReadImportantTableReq)
  // required string userID = 1;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "protocol.ReadImportantTableReq.userID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ReadImportantTableReq)
  return target;
}

size_t ReadImportantTableReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ReadImportantTableReq)
  size_t total_size = 0;

  // required string userID = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadImportantTableReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ReadImportantTableReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadImportantTableReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadImportantTableReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ReadImportantTableReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ReadImportantTableReq)
    UnsafeMergeFrom(*source);
  }
}

void ReadImportantTableReq::MergeFrom(const ReadImportantTableReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ReadImportantTableReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadImportantTableReq::UnsafeMergeFrom(const ReadImportantTableReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_userid()) {
      set_has_userid();
      userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReadImportantTableReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ReadImportantTableReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadImportantTableReq::CopyFrom(const ReadImportantTableReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ReadImportantTableReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadImportantTableReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ReadImportantTableReq::Swap(ReadImportantTableReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadImportantTableReq::InternalSwap(ReadImportantTableReq* other) {
  userid_.Swap(&other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadImportantTableReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadImportantTableReq_descriptor_;
  metadata.reflection = ReadImportantTableReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadImportantTableReq

// required string userID = 1;
bool ReadImportantTableReq::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReadImportantTableReq::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void ReadImportantTableReq::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReadImportantTableReq::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userid();
}
const ::std::string& ReadImportantTableReq::userid() const {
  // @@protoc_insertion_point(field_get:protocol.ReadImportantTableReq.userID)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadImportantTableReq::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ReadImportantTableReq.userID)
}
void ReadImportantTableReq::set_userid(const char* value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ReadImportantTableReq.userID)
}
void ReadImportantTableReq::set_userid(const char* value, size_t size) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ReadImportantTableReq.userID)
}
::std::string* ReadImportantTableReq::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:protocol.ReadImportantTableReq.userID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadImportantTableReq::release_userid() {
  // @@protoc_insertion_point(field_release:protocol.ReadImportantTableReq.userID)
  clear_has_userid();
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadImportantTableReq::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:protocol.ReadImportantTableReq.userID)
}

inline const ReadImportantTableReq* ReadImportantTableReq::internal_default_instance() {
  return &ReadImportantTableReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadImportantTableRsp::kResultCodeFieldNumber;
const int ReadImportantTableRsp::kFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadImportantTableRsp::ReadImportantTableRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_ReadTable_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:protocol.ReadImportantTableRsp)
}

void ReadImportantTableRsp::InitAsDefaultInstance() {
}

ReadImportantTableRsp::ReadImportantTableRsp(const ReadImportantTableRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protocol.ReadImportantTableRsp)
}

void ReadImportantTableRsp::SharedCtor() {
  _cached_size_ = 0;
  resultcode_ = 0;
}

ReadImportantTableRsp::~ReadImportantTableRsp() {
  // @@protoc_insertion_point(destructor:protocol.ReadImportantTableRsp)
  SharedDtor();
}

void ReadImportantTableRsp::SharedDtor() {
}

void ReadImportantTableRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadImportantTableRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadImportantTableRsp_descriptor_;
}

const ReadImportantTableRsp& ReadImportantTableRsp::default_instance() {
  protobuf_InitDefaults_ReadTable_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadImportantTableRsp> ReadImportantTableRsp_default_instance_;

ReadImportantTableRsp* ReadImportantTableRsp::New(::google::protobuf::Arena* arena) const {
  ReadImportantTableRsp* n = new ReadImportantTableRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadImportantTableRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:protocol.ReadImportantTableRsp)
  resultcode_ = 0;
  friend__.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReadImportantTableRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protocol.ReadImportantTableRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protocol.ResultCode resultCode = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::protocol::ResultCode_IsValid(value)) {
            set_resultcode(static_cast< ::protocol::ResultCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_friend;
        break;
      }

      // repeated .protocol.FriendItem friend = 2;
      case 2: {
        if (tag == 18) {
         parse_friend:
          DO_(input->IncrementRecursionDepth());
         parse_loop_friend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_friend_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_friend;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protocol.ReadImportantTableRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protocol.ReadImportantTableRsp)
  return false;
#undef DO_
}

void ReadImportantTableRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protocol.ReadImportantTableRsp)
  // required .protocol.ResultCode resultCode = 1;
  if (has_resultcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->resultcode(), output);
  }

  // repeated .protocol.FriendItem friend = 2;
  for (unsigned int i = 0, n = this->friend__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:protocol.ReadImportantTableRsp)
}

::google::protobuf::uint8* ReadImportantTableRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protocol.ReadImportantTableRsp)
  // required .protocol.ResultCode resultCode = 1;
  if (has_resultcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->resultcode(), target);
  }

  // repeated .protocol.FriendItem friend = 2;
  for (unsigned int i = 0, n = this->friend__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->friend_(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protocol.ReadImportantTableRsp)
  return target;
}

size_t ReadImportantTableRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protocol.ReadImportantTableRsp)
  size_t total_size = 0;

  // required .protocol.ResultCode resultCode = 1;
  if (has_resultcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->resultcode());
  }
  // repeated .protocol.FriendItem friend = 2;
  {
    unsigned int count = this->friend__size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadImportantTableRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protocol.ReadImportantTableRsp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadImportantTableRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadImportantTableRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protocol.ReadImportantTableRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protocol.ReadImportantTableRsp)
    UnsafeMergeFrom(*source);
  }
}

void ReadImportantTableRsp::MergeFrom(const ReadImportantTableRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protocol.ReadImportantTableRsp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadImportantTableRsp::UnsafeMergeFrom(const ReadImportantTableRsp& from) {
  GOOGLE_DCHECK(&from != this);
  friend__.MergeFrom(from.friend__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_resultcode()) {
      set_resultcode(from.resultcode());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReadImportantTableRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protocol.ReadImportantTableRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadImportantTableRsp::CopyFrom(const ReadImportantTableRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protocol.ReadImportantTableRsp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadImportantTableRsp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->friend_())) return false;
  return true;
}

void ReadImportantTableRsp::Swap(ReadImportantTableRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadImportantTableRsp::InternalSwap(ReadImportantTableRsp* other) {
  std::swap(resultcode_, other->resultcode_);
  friend__.UnsafeArenaSwap(&other->friend__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadImportantTableRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadImportantTableRsp_descriptor_;
  metadata.reflection = ReadImportantTableRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadImportantTableRsp

// required .protocol.ResultCode resultCode = 1;
bool ReadImportantTableRsp::has_resultcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReadImportantTableRsp::set_has_resultcode() {
  _has_bits_[0] |= 0x00000001u;
}
void ReadImportantTableRsp::clear_has_resultcode() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReadImportantTableRsp::clear_resultcode() {
  resultcode_ = 0;
  clear_has_resultcode();
}
::protocol::ResultCode ReadImportantTableRsp::resultcode() const {
  // @@protoc_insertion_point(field_get:protocol.ReadImportantTableRsp.resultCode)
  return static_cast< ::protocol::ResultCode >(resultcode_);
}
void ReadImportantTableRsp::set_resultcode(::protocol::ResultCode value) {
  assert(::protocol::ResultCode_IsValid(value));
  set_has_resultcode();
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:protocol.ReadImportantTableRsp.resultCode)
}

// repeated .protocol.FriendItem friend = 2;
int ReadImportantTableRsp::friend__size() const {
  return friend__.size();
}
void ReadImportantTableRsp::clear_friend_() {
  friend__.Clear();
}
const ::protocol::FriendItem& ReadImportantTableRsp::friend_(int index) const {
  // @@protoc_insertion_point(field_get:protocol.ReadImportantTableRsp.friend)
  return friend__.Get(index);
}
::protocol::FriendItem* ReadImportantTableRsp::mutable_friend_(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.ReadImportantTableRsp.friend)
  return friend__.Mutable(index);
}
::protocol::FriendItem* ReadImportantTableRsp::add_friend_() {
  // @@protoc_insertion_point(field_add:protocol.ReadImportantTableRsp.friend)
  return friend__.Add();
}
::google::protobuf::RepeatedPtrField< ::protocol::FriendItem >*
ReadImportantTableRsp::mutable_friend_() {
  // @@protoc_insertion_point(field_mutable_list:protocol.ReadImportantTableRsp.friend)
  return &friend__;
}
const ::google::protobuf::RepeatedPtrField< ::protocol::FriendItem >&
ReadImportantTableRsp::friend_() const {
  // @@protoc_insertion_point(field_list:protocol.ReadImportantTableRsp.friend)
  return friend__;
}

inline const ReadImportantTableRsp* ReadImportantTableRsp::internal_default_instance() {
  return &ReadImportantTableRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)
