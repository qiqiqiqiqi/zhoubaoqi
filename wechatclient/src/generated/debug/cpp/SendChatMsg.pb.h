// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SendChatMsg.proto

#ifndef PROTOBUF_SendChatMsg_2eproto__INCLUDED
#define PROTOBUF_SendChatMsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ChatData.pb.h"
#include "Result.pb.h"
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_SendChatMsg_2eproto();
void protobuf_InitDefaults_SendChatMsg_2eproto();
void protobuf_AssignDesc_SendChatMsg_2eproto();
void protobuf_ShutdownFile_SendChatMsg_2eproto();

class SendChatReq;
class SendChatRsp;

// ===================================================================

class SendChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.SendChatReq) */ {
 public:
  SendChatReq();
  virtual ~SendChatReq();

  SendChatReq(const SendChatReq& from);

  inline SendChatReq& operator=(const SendChatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendChatReq& default_instance();

  static const SendChatReq* internal_default_instance();

  void Swap(SendChatReq* other);

  // implements Message ----------------------------------------------

  inline SendChatReq* New() const { return New(NULL); }

  SendChatReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendChatReq& from);
  void MergeFrom(const SendChatReq& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendChatReq* other);
  void UnsafeMergeFrom(const SendChatReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protocol.ChatItem chatData = 1;
  bool has_chatdata() const;
  void clear_chatdata();
  static const int kChatDataFieldNumber = 1;
  const ::protocol::ChatItem& chatdata() const;
  ::protocol::ChatItem* mutable_chatdata();
  ::protocol::ChatItem* release_chatdata();
  void set_allocated_chatdata(::protocol::ChatItem* chatdata);

  // @@protoc_insertion_point(class_scope:protocol.SendChatReq)
 private:
  inline void set_has_chatdata();
  inline void clear_has_chatdata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::protocol::ChatItem* chatdata_;
  friend void  protobuf_InitDefaults_SendChatMsg_2eproto_impl();
  friend void  protobuf_AddDesc_SendChatMsg_2eproto_impl();
  friend void protobuf_AssignDesc_SendChatMsg_2eproto();
  friend void protobuf_ShutdownFile_SendChatMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendChatReq> SendChatReq_default_instance_;

// -------------------------------------------------------------------

class SendChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.SendChatRsp) */ {
 public:
  SendChatRsp();
  virtual ~SendChatRsp();

  SendChatRsp(const SendChatRsp& from);

  inline SendChatRsp& operator=(const SendChatRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendChatRsp& default_instance();

  static const SendChatRsp* internal_default_instance();

  void Swap(SendChatRsp* other);

  // implements Message ----------------------------------------------

  inline SendChatRsp* New() const { return New(NULL); }

  SendChatRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendChatRsp& from);
  void MergeFrom(const SendChatRsp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendChatRsp* other);
  void UnsafeMergeFrom(const SendChatRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .protocol.ResultCode resultCode = 1;
  bool has_resultcode() const;
  void clear_resultcode();
  static const int kResultCodeFieldNumber = 1;
  ::protocol::ResultCode resultcode() const;
  void set_resultcode(::protocol::ResultCode value);

  // required string messageInfoID = 2;
  bool has_messageinfoid() const;
  void clear_messageinfoid();
  static const int kMessageInfoIDFieldNumber = 2;
  const ::std::string& messageinfoid() const;
  void set_messageinfoid(const ::std::string& value);
  void set_messageinfoid(const char* value);
  void set_messageinfoid(const char* value, size_t size);
  ::std::string* mutable_messageinfoid();
  ::std::string* release_messageinfoid();
  void set_allocated_messageinfoid(::std::string* messageinfoid);

  // @@protoc_insertion_point(class_scope:protocol.SendChatRsp)
 private:
  inline void set_has_resultcode();
  inline void clear_has_resultcode();
  inline void set_has_messageinfoid();
  inline void clear_has_messageinfoid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr messageinfoid_;
  int resultcode_;
  friend void  protobuf_InitDefaults_SendChatMsg_2eproto_impl();
  friend void  protobuf_AddDesc_SendChatMsg_2eproto_impl();
  friend void protobuf_AssignDesc_SendChatMsg_2eproto();
  friend void protobuf_ShutdownFile_SendChatMsg_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendChatRsp> SendChatRsp_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SendChatReq

// required .protocol.ChatItem chatData = 1;
inline bool SendChatReq::has_chatdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendChatReq::set_has_chatdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendChatReq::clear_has_chatdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendChatReq::clear_chatdata() {
  if (chatdata_ != NULL) chatdata_->::protocol::ChatItem::Clear();
  clear_has_chatdata();
}
inline const ::protocol::ChatItem& SendChatReq::chatdata() const {
  // @@protoc_insertion_point(field_get:protocol.SendChatReq.chatData)
  return chatdata_ != NULL ? *chatdata_
                         : *::protocol::ChatItem::internal_default_instance();
}
inline ::protocol::ChatItem* SendChatReq::mutable_chatdata() {
  set_has_chatdata();
  if (chatdata_ == NULL) {
    chatdata_ = new ::protocol::ChatItem;
  }
  // @@protoc_insertion_point(field_mutable:protocol.SendChatReq.chatData)
  return chatdata_;
}
inline ::protocol::ChatItem* SendChatReq::release_chatdata() {
  // @@protoc_insertion_point(field_release:protocol.SendChatReq.chatData)
  clear_has_chatdata();
  ::protocol::ChatItem* temp = chatdata_;
  chatdata_ = NULL;
  return temp;
}
inline void SendChatReq::set_allocated_chatdata(::protocol::ChatItem* chatdata) {
  delete chatdata_;
  chatdata_ = chatdata;
  if (chatdata) {
    set_has_chatdata();
  } else {
    clear_has_chatdata();
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.SendChatReq.chatData)
}

inline const SendChatReq* SendChatReq::internal_default_instance() {
  return &SendChatReq_default_instance_.get();
}
// -------------------------------------------------------------------

// SendChatRsp

// required .protocol.ResultCode resultCode = 1;
inline bool SendChatRsp::has_resultcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendChatRsp::set_has_resultcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendChatRsp::clear_has_resultcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendChatRsp::clear_resultcode() {
  resultcode_ = 0;
  clear_has_resultcode();
}
inline ::protocol::ResultCode SendChatRsp::resultcode() const {
  // @@protoc_insertion_point(field_get:protocol.SendChatRsp.resultCode)
  return static_cast< ::protocol::ResultCode >(resultcode_);
}
inline void SendChatRsp::set_resultcode(::protocol::ResultCode value) {
  assert(::protocol::ResultCode_IsValid(value));
  set_has_resultcode();
  resultcode_ = value;
  // @@protoc_insertion_point(field_set:protocol.SendChatRsp.resultCode)
}

// required string messageInfoID = 2;
inline bool SendChatRsp::has_messageinfoid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendChatRsp::set_has_messageinfoid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendChatRsp::clear_has_messageinfoid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendChatRsp::clear_messageinfoid() {
  messageinfoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_messageinfoid();
}
inline const ::std::string& SendChatRsp::messageinfoid() const {
  // @@protoc_insertion_point(field_get:protocol.SendChatRsp.messageInfoID)
  return messageinfoid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendChatRsp::set_messageinfoid(const ::std::string& value) {
  set_has_messageinfoid();
  messageinfoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.SendChatRsp.messageInfoID)
}
inline void SendChatRsp::set_messageinfoid(const char* value) {
  set_has_messageinfoid();
  messageinfoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.SendChatRsp.messageInfoID)
}
inline void SendChatRsp::set_messageinfoid(const char* value, size_t size) {
  set_has_messageinfoid();
  messageinfoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.SendChatRsp.messageInfoID)
}
inline ::std::string* SendChatRsp::mutable_messageinfoid() {
  set_has_messageinfoid();
  // @@protoc_insertion_point(field_mutable:protocol.SendChatRsp.messageInfoID)
  return messageinfoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendChatRsp::release_messageinfoid() {
  // @@protoc_insertion_point(field_release:protocol.SendChatRsp.messageInfoID)
  clear_has_messageinfoid();
  return messageinfoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendChatRsp::set_allocated_messageinfoid(::std::string* messageinfoid) {
  if (messageinfoid != NULL) {
    set_has_messageinfoid();
  } else {
    clear_has_messageinfoid();
  }
  messageinfoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messageinfoid);
  // @@protoc_insertion_point(field_set_allocated:protocol.SendChatRsp.messageInfoID)
}

inline const SendChatRsp* SendChatRsp::internal_default_instance() {
  return &SendChatRsp_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SendChatMsg_2eproto__INCLUDED
