// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserData.proto

#ifndef PROTOBUF_UserData_2eproto__INCLUDED
#define PROTOBUF_UserData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_UserData_2eproto();
void protobuf_InitDefaults_UserData_2eproto();
void protobuf_AssignDesc_UserData_2eproto();
void protobuf_ShutdownFile_UserData_2eproto();

class UserItem;

// ===================================================================

class UserItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.UserItem) */ {
 public:
  UserItem();
  virtual ~UserItem();

  UserItem(const UserItem& from);

  inline UserItem& operator=(const UserItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserItem& default_instance();

  static const UserItem* internal_default_instance();

  void Swap(UserItem* other);

  // implements Message ----------------------------------------------

  inline UserItem* New() const { return New(NULL); }

  UserItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserItem& from);
  void MergeFrom(const UserItem& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserItem* other);
  void UnsafeMergeFrom(const UserItem& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userId = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // required string userName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional int32 headIndex = 3;
  bool has_headindex() const;
  void clear_headindex();
  static const int kHeadIndexFieldNumber = 3;
  ::google::protobuf::int32 headindex() const;
  void set_headindex(::google::protobuf::int32 value);

  // optional int64 creatTime = 4;
  bool has_creattime() const;
  void clear_creattime();
  static const int kCreatTimeFieldNumber = 4;
  ::google::protobuf::int64 creattime() const;
  void set_creattime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protocol.UserItem)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_headindex();
  inline void clear_has_headindex();
  inline void set_has_creattime();
  inline void clear_has_creattime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int64 creattime_;
  ::google::protobuf::int32 headindex_;
  friend void  protobuf_InitDefaults_UserData_2eproto_impl();
  friend void  protobuf_AddDesc_UserData_2eproto_impl();
  friend void protobuf_AssignDesc_UserData_2eproto();
  friend void protobuf_ShutdownFile_UserData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UserItem> UserItem_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UserItem

// required string userId = 1;
inline bool UserItem::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserItem::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserItem::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserItem::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_userid();
}
inline const ::std::string& UserItem::userid() const {
  // @@protoc_insertion_point(field_get:protocol.UserItem.userId)
  return userid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserItem::set_userid(const ::std::string& value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.UserItem.userId)
}
inline void UserItem::set_userid(const char* value) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.UserItem.userId)
}
inline void UserItem::set_userid(const char* value, size_t size) {
  set_has_userid();
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.UserItem.userId)
}
inline ::std::string* UserItem::mutable_userid() {
  set_has_userid();
  // @@protoc_insertion_point(field_mutable:protocol.UserItem.userId)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserItem::release_userid() {
  // @@protoc_insertion_point(field_release:protocol.UserItem.userId)
  clear_has_userid();
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserItem::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    set_has_userid();
  } else {
    clear_has_userid();
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:protocol.UserItem.userId)
}

// required string userName = 2;
inline bool UserItem::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserItem::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserItem::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserItem::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& UserItem::username() const {
  // @@protoc_insertion_point(field_get:protocol.UserItem.userName)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserItem::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.UserItem.userName)
}
inline void UserItem::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.UserItem.userName)
}
inline void UserItem::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.UserItem.userName)
}
inline ::std::string* UserItem::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:protocol.UserItem.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserItem::release_username() {
  // @@protoc_insertion_point(field_release:protocol.UserItem.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserItem::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:protocol.UserItem.userName)
}

// optional int32 headIndex = 3;
inline bool UserItem::has_headindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserItem::set_has_headindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserItem::clear_has_headindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserItem::clear_headindex() {
  headindex_ = 0;
  clear_has_headindex();
}
inline ::google::protobuf::int32 UserItem::headindex() const {
  // @@protoc_insertion_point(field_get:protocol.UserItem.headIndex)
  return headindex_;
}
inline void UserItem::set_headindex(::google::protobuf::int32 value) {
  set_has_headindex();
  headindex_ = value;
  // @@protoc_insertion_point(field_set:protocol.UserItem.headIndex)
}

// optional int64 creatTime = 4;
inline bool UserItem::has_creattime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UserItem::set_has_creattime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UserItem::clear_has_creattime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UserItem::clear_creattime() {
  creattime_ = GOOGLE_LONGLONG(0);
  clear_has_creattime();
}
inline ::google::protobuf::int64 UserItem::creattime() const {
  // @@protoc_insertion_point(field_get:protocol.UserItem.creatTime)
  return creattime_;
}
inline void UserItem::set_creattime(::google::protobuf::int64 value) {
  set_has_creattime();
  creattime_ = value;
  // @@protoc_insertion_point(field_set:protocol.UserItem.creatTime)
}

inline const UserItem* UserItem::internal_default_instance() {
  return &UserItem_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserData_2eproto__INCLUDED
